{
	"editor.lineHeight": 0,
	"editor.fontSize": 12,
	"window.titleBarStyle": "custom",
	"workbench.colorTheme": "GitHub Dark",
	"workbench.iconTheme": "vscode-icons",
	"terminal.integrated.cursorBlinking": true,
	"terminal.integrated.fontFamily": "Hack Nerd Font Mono",
	"terminal.integrated.cursorStyle": "line",
	"terminal.integrated.confirmOnExit": "always",
	"terminal.integrated.autoReplies": {
		"[Oh My Zsh] Would you like to check for updates? [Y/n]": "Y\r"
	},
	"terminal.integrated.tabs.enabled": true,
	"editor.renderWhitespace": "selection",
	"editor.scrollPredominantAxis": true,
	"editor.fontFamily": "FiraCode Nerd Font",
	"editor.fontLigatures": true,
	"editor.cursorSmoothCaretAnimation": "on",
	"editor.find.addExtraSpaceOnTop": false,
	"editor.guides.bracketPairs": "active",
	"editor.bracketPairColorization.enabled": true,
	"editor.rulers": [80, 120],
	"editor.hover.sticky": true,
	"editor.renderControlCharacters": true,
	"editor.semanticHighlighting.enabled": true,
	"editor.minimap.enabled": true,
	"editor.minimap.renderCharacters": false,
	"breadcrumbs.enabled": true,
	"workbench.activityBar.orientation": "vertical",
	"workbench.colorCustomizations": {
		"minimap.background": "#1E242780",
		"terminalStickyScroll.background": "#1E2427A0",
		"terminalStickyScrollHover.background": "#1E2427"
	},
	"window.dialogStyle": "custom",
	"editor.inlineSuggest.enabled": true,
	"search.quickOpen.history.filterSortOrder": "recency",
	"terminal.integrated.enableImages": true,
	"terminal.integrated.cursorStyleInactive": "line",
	"terminal.integrated.enableVisualBell": true,
	"diffEditor.ignoreTrimWhitespace": false,
	"terminal.integrated.shellIntegration.enabled": true,
	"terminal.integrated.stickyScroll.enabled": true,
	"workbench.tree.enableStickyScroll": true,
	"accessibility.signals.terminalBell": {
		"sound": "on"
	},
	"search.quickAccess.preserveInput": true,
	"editor.foldingImportsByDefault": true,
	"editor.occurrencesHighlight": "multiFile",
	"terminal.integrated.enablePersistentSessions": true,
	"editor.inlineSuggest.suppressSuggestions": true,
	"editor.defaultFormatter": "esbenp.prettier-vscode",
	"editor.codeActionsOnSave": {
		"source.fixAll.eslint": "always",
		"source.fixAll.stylelint": "always"
	},
	"editor.formatOnSaveMode": "modificationsIfAvailable",
	"editor.detectIndentation": true,
	"editor.formatOnPaste": true,
	"editor.linkedEditing": true,
	"editor.suggestSelection": "first",
	"editor.accessibilitySupport": "off",
	"scm.workingSets.enabled": true,
	"workbench.list.smoothScrolling": true,
	"files.autoSave": "off",
	"workbench.editor.closeOnFileDelete": true,
	"workbench.editor.highlightModifiedTabs": true,
	"editor.stickyScroll.enabled": true,
	"terminal.integrated.inheritEnv": false,
	"explorer.confirmDragAndDrop": false,
	"explorer.confirmDelete": true,
	"git.autofetch": true,
	"git.decorations.enabled": true,
	"git.confirmSync": false,
	"git.untrackedChanges": "separate",
	"scm.alwaysShowRepositories": true,
	"workbench.startupEditor": "newUntitledFile",
	"files.associations": {
		".*rc": "json"
	},
	"extensions.ignoreRecommendations": false,
	"telemetry.telemetryLevel": "off",
	"terminal.external.osxExec": "Alacritty.app",
	"vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
	"search.exclude": {
		"**/node_modules": true,
		"**/bower_components": true,
		"**/env": true,
		"**/venv": true
	},
	"files.insertFinalNewline": true,
	"files.watcherExclude": {
		"**/.git/objects/**": true,
		"**/.git/subtree-cache/**": true,
		"**/node_modules/**": true,
		"**/env/**": true,
		"**/venv/**": true,
		"env-*": true
	},
	"files.exclude": {
		"**/.git": true,
		"**/.DS_Store": true,
		"**/__pycache__": true,
		"**/.pytest_cache": true,
		"**/node_modules": true,
		"venv": true,
		"*.sublime-*": true,
		"env*": true
	},
	"python.autoComplete.addBrackets": true,
	"python.jediEnabled": false,
	"python.dataScience.sendSelectionToInteractiveWindow": true,
	"python.linting.flake8Enabled": true,
	"python.languageServer": "Default",
	"python.analysis.completeFunctionParens": true,
	"markdown.preview.fontSize": 12,
	"markdown.preview.lineHeight": 1.5,
	"go.lintTool": "golangci-lint",
	"go.lintFlags": ["--fast"],
	"go.useLanguageServer": true,
	"go.toolsManagement.autoUpdate": true,
	"javascript.experimental.updateImportsOnPaste": true,
	"typescript.experimental.updateImportsOnPaste": true,
	"javascript.updateImportsOnFileMove.enabled": "always",
	"typescript.updateImportsOnFileMove.enabled": "always",
	"javascript.referencesCodeLens.enabled": true,
	"typescript.referencesCodeLens.enabled": true,
	"javascript.suggestionActions.enabled": true,
	"typescript.suggestionActions.enabled": true,
	"typescript.validate.enable": true,
	"typescript.referencesCodeLens.showOnAllFunctions": true,
	"typescript.preferences.preferTypeOnlyAutoImports": true,
	"typescript.tsserver.nodePath": "node",
	"typescript.tsserver.web.typeAcquisition.enabled": true,
	"typescript.tsserver.experimental.enableProjectDiagnostics": true,
	"typescript.tsserver.experimental.useVsCodeWatcher": true,
	"typescript.implementationsCodeLens.enabled": true,
	"typescript.implementationsCodeLens.showOnInterfaceMethods": true,
	"typescript.tsserver.maxTsServerMemory": 8192,
	"typescript.preferGoToSourceDefinition": true,
	"typescript.suggest.completeFunctionCalls": true,
	"javascript.inlayHints.parameterNames.enabled": "all",
	"typescript.inlayHints.parameterNames.enabled": "all",
	"javascript.inlayHints.variableTypes.enabled": true,
	"typescript.inlayHints.variableTypes.enabled": true,
	"javascript.inlayHints.parameterTypes.enabled": true,
	"typescript.inlayHints.parameterTypes.enabled": true,
	"javascript.inlayHints.propertyDeclarationTypes.enabled": true,
	"typescript.inlayHints.propertyDeclarationTypes.enabled": true,
	"javascript.inlayHints.functionLikeReturnTypes.enabled": true,
	"typescript.inlayHints.functionLikeReturnTypes.enabled": true,
	"typescript.inlayHints.enumMemberValues.enabled": true,
	"javascript.inlayHints.enumMemberValues.enabled": true,
	"json.format.enable": false,
	"javascript.format.enable": false,
	"typescript.format.enable": false,
	"eslint.format.enable": true,
	"eslint.codeActionsOnSave.mode": "problems",
	"eslint.codeActionsOnSave.rules": ["*"],
	"editor.formatOnSave": true,
	"eslint.codeAction.showDocumentation": {
		"enable": true
	},
	"eslint.rules.customizations": [
		{
			"rule": "prettier/prettier",
			"severity": "off"
		}
	],
	"css.format.enable": false,
	"scss.format.enable": false,
	"less.format.enable": false,
	"stylelint.validate": ["css", "postcss", "scss", "sass", "less"],
	"stylelint.snippet": ["css", "postcss", "scss", "sass", "less"],
	"prettier.enable": true,
	"gitlens.plusFeatures.enabled": false,
	"svg.preview.mode": "svg",
	"emmet.includeLanguages": {
		"javascript": "javascriptreact",
		"vue-html": "html"
	},
	"redhat.telemetry.enabled": true,
	"github.copilot.enable": {
		"*": true,
		"yaml": false,
		"plaintext": true,
		"markdown": true
	},
	"gitlens.hovers.currentLine.over": "line",
	"codestream.email": "duuuuuuuuy@gmail.com",
	"liveshare.presence": true,
	"trailing-spaces.trimOnSave": true,
	"githubPullRequests.pullBranch": "never",
	"githubPullRequests.fileListLayout": "tree",
	"codeQL.telemetry.enableTelemetry": true,
	"cSpell.allowCompoundWords": true,
	"cSpell.language": "en,en-US",
	"cSpell.userWords": [
		"ARBITRUM",
		"CERA",
		"clsx",
		"customizer",
		"devcycle",
		"duyhd",
		"ekyc",
		"formik",
		"huynhducduy",
		"iife",
		"labelledby",
		"linkedin",
		"noopener",
		"noreferrer",
		"realised",
		"rfdc",
		"sahty",
		"semibold",
		"shortlink",
		"tinymce",
		"Toastify",
		"Uncategorized",
		"Utilisation",
		"vite",
		"vitejs",
		"vuedraggable",
		"vueform",
		"vueuse",
		"vuex"
	],
	"cSpell.enableFiletypes": [
		"dockerfile",
		"dotenv",
		"editorconfig",
		"gitignore",
		"hlsl",
		"ignore",
		"jsx",
		"log",
		"sass",
		"scss",
		"sql",
		"styled-css",
		"svelte",
		"vue",
		"vue-directives",
		"vue-html",
		"vue-injection-markdown",
		"vue-interpolations"
	],
	"codespaces.accountProvider": "GitHub",
	"deepscan.enable": true,
	"vsicons.dontShowNewVersionMessage": true,
	"chat.experimental.quickQuestion.enable": true,
	"cody.serverEndpoint": "https://sourcegraph.com/",
	"codium.enable": true,
	"tabnine.experimentalAutoImports": true,
	"sonarlint.focusOnNewCode": true,
	"prisma.showPrismaDataPlatformNotification": false,
	"doesItThrow.includeTryStatementThrows": true,
	"codestream.serverUrl": "https://codestream-us1.service.newrelic.com",
	"snyk.advanced.cliPath": "/Users/huynhducduy/Library/Application Support/snyk-ls/snyk-macos",
	"snyk.yesWelcomeNotification": false,
	"snyk.trustedFolders": [
		"/Users/huynhducduy/workspace/innosearch/innosearch-fe/interface"
	],
	"gitlens.launchpad.indicator.enabled": false,
	"commentAnchors.workspace.excludeFiles": "**/{node_modules,.git,.idea,target,out,build,dist,bin,obj,vendor,.unlighthouse,.swc,.imageoptimizercache}/**/*",
	"explorer.fileNesting.enabled": true,
	"explorer.fileNesting.expand": false,
	"explorer.fileNesting.patterns": {
		".clang-tidy": ".clang-format, .clangd, compile_commands.json",
		".env": "*.env, .env.*, .envrc, env.d.ts",
		".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
		".project": ".classpath",
		"+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
		"+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
		"ansible.cfg": "ansible.cfg, .ansible-lint, requirements.yml",
		"app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
		"astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
		"Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
		"CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
		"composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
		"default.nix": "shell.nix",
		"deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
		"Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, captain-definition, compose.*, docker-compose.*, dockerfile*",
		"flake.nix": "flake.lock",
		"gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"gemfile": ".ruby-version, gemfile.lock",
		"go.mod": ".air*, go.sum",
		"go.work": "go.work.sum",
		"hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
		"I*.cs": "$(capture).cs",
		"Makefile": "*.mk",
		"mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
		"next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
		"Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
		"pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
		"pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json*, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, xo.config.*",
		"quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
		"Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
		"README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
		"remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
		"rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
		"setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
		"setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
		"shims.d.ts": "*.d.ts",
		"svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
		"*.asax": "$(capture).*.cs, $(capture).*.vb",
		"*.ascx": "$(capture).*.cs, $(capture).*.vb",
		"*.ashx": "$(capture).*.cs, $(capture).*.vb",
		"*.aspx": "$(capture).*.cs, $(capture).*.vb",
		"*.axaml": "$(capture).axaml.cs",
		"*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
		"*.c": "$(capture).h",
		"*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
		"*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
		"*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
		"*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
		"*.cs": "$(capture).*.cs",
		"*.cshtml": "$(capture).cshtml.cs",
		"*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
		"*.css": "$(capture).css.map, $(capture).*.css",
		"*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
		"*.dart": "$(capture).freezed.dart, $(capture).g.dart",
		"*.db": "*.db-shm, *.db-wal",
		"*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
		"*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
		"*.go": "$(capture)_test.go",
		"*.java": "$(capture).class",
		"*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
		"*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts,  $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts",
		"*.master": "$(capture).*.cs, $(capture).*.vb",
		"*.md": "$(capture).*",
		"*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
		"*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
		"*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
		"*.pubxml": "$(capture).pubxml.user",
		"*.py": "$(capture).pyi",
		"*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
		"*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
		"*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
		"*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
		"*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts, $(capture).css.ts",
		"*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
		"*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
		"*.w": "$(capture).*.w, I$(capture).w",
		"*.xaml": "$(capture).xaml.cs"
	},
	"sherlock.userId": "caffcdd9-cdda-43e5-972d-bc48ebc53fc2",
	"aws.telemetry": false,
	"todo-tree.filtering.useBuiltInExcludes": "file and search excludes",
	"todo-tree.tree.expanded": true,
	"todo-tree.tree.labelFormat": "${tag}${after}",
	"todo-tree.tree.showCountsInTree": true,
	"todo-tree.tree.showBadges": true,
	"todo-tree.highlights.defaultHighlight": {
		"icon": "alert",
		"type": "whole-line",
		"foreground": "#ffffff",
		"background": "#00eeba",
		"opacity": 20,
		"fontStyle": "bold",
		"fontWeight": "700",
		"textDecoration": "underline dotted",
		"iconColour": "#cec300",
		"gutterIcon": true,
		"rulerLane": "center"
	},
	"todo-tree.general.tags": [
		"BUG",
		"HACK",
		"FIXME",
		"TODO",
		"XXX",
		"[ ]",
		"[x]",
		"NOTE",
		"REVIEW",
		"SECTION",
		"LINK",
		"ANCHOR",
		"STUB"
	],
	"todo-tree.highlights.customHighlight": {
		"TODO": {
			"icon": "check"
		},
		"FIXME": {
			"foreground": "black",
			"iconColour": "yellow",
			"gutterIcon": true
		}
	},
	"git.openRepositoryInParentFolders": "never",
	"cursor.cpp.disabledLanguages": [
		"yaml"
	]
}
